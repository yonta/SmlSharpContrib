_require "basis.smi"
_require "ffi.smi"

structure HttpParser =
struct
exception Parse
type t (= *)
type chunkedDecoder = unit ptr
type request = {method: string, path: string, minorVersion: int, headers: (string * string) list, parsedSize: int}
type response = {minorVersion: int, status: int, message: string, headers: (string * string) list, parsedSize: int}
val prepareHeaders: int -> t
val prepareDecoder: unit -> chunkedDecoder
val parseRequest: t -> string -> request option
val parseResponse: t -> string -> response option
val parseHeaders: t -> string -> {headers: (string * string) list, parsedSize: int} option
val decodeChunked: chunkedDecoder -> CharArray.array -> int -> int ref ->  unit option
val finalizeHeaders: t -> unit
val finalizeDecoder: chunkedDecoder -> unit
end
